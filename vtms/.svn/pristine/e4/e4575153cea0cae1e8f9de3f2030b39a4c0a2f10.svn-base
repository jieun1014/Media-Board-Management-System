package com.transfer.video.vtms.device;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;

@Service
public class DeviceConnStatusServiceImpl implements DeviceConnStatusService {
	@Autowired
	private DeviceMapper deviceMapper;
	
	@Scheduled(fixedRate = 1000*60*60)
	@Override
	public void editDeviceConnStatus() {
		InputStream inputStream = null;
		InputStreamReader inputStreamReader = null;
		BufferedReader bufferedReader = null;
	
		// 1. 디바이스 목록을 조회한다.
		List<Device> devices = this.deviceMapper.selectAll(new Device());//
		// 2. 목록 조회 결과가 존재하는가?
		if (devices != null 
				&& devices.size() > 0) {
			// 5. 조회 결과가 존재하는가?
			for (int i = 0; i < devices.size(); i++) {
				// 3. 디바이스 접속 상태를 확인한다.
				boolean  connStatus = false;//접속 상태를 확인하고 반환해주는 변수
				
				try {
					String command = "tcping " + devices.get(i).getIp() + " 80";
					
					String cmd = "cmd.exe /c" + command;
					
					Runtime runtime = Runtime.getRuntime();
					Process process = runtime.exec(cmd);
					
					inputStream = process.getInputStream();
					inputStreamReader = new InputStreamReader(inputStream);
					bufferedReader = new BufferedReader(inputStreamReader);
					
					String line;
					while ((line = bufferedReader.readLine()) != null) {
						if (line.indexOf("fail") > 0) {//문자열 내에 "fail"이 들어간 문자열만
							int begin = line.indexOf("(") + 1;
							int end = line.indexOf("%") - 3;
							int probablity = Integer.parseInt(line.substring(begin, end));//확률 정수 부분만 자르기(4번 ping 날리기 때문에 소수점이 나올 일이 없으므로 정수 부분만 자른다.) -> 문자열을 int형으로 바꿔줌.
							if (probablity <= 25) {//실패 확률이 25% 이하면
								connStatus = true;//true 넣어준다. 그 외에는 위에서 false를 초기화 해 주었으므로 그대로 둔다.
							}
						}
					}
				} catch (Exception e) {
					e.printStackTrace();
				} finally {
					try {
						if (bufferedReader != null) {
							bufferedReader.close();
						}
						
						if (inputStreamReader != null) {
							inputStreamReader.close();
						}
						
						if (inputStream !=null) {
							inputStream.close();
						}
					} catch (Exception e) {
						e.printStackTrace();
					}
				}
				
				// 4. 디바이스 접속 상태를 수정한다.
				if (connStatus == true) {
					devices.get(i).setConnStatus("Y");
				} else {
					devices.get(i).setConnStatus("N");
				}
				System.out.println("수정 중");
				this.deviceMapper.update(devices.get(i));
			}
		}
	}

	@Override
	public void editDeviceConnStatus(Device device) {
		InputStream inputStream = null;
		InputStreamReader inputStreamReader = null;
		BufferedReader bufferedReader = null;
		
		// 1. IP가 존재하는가?
		if (device != null) {
			// 2. 디바이스 접속 상태를 확인한다.
			boolean  connStatus = false;//접속 상태를 확인하고 반환해주는 변수
			
			try {
				String command = "tcping " + device.getIp() + " 80";
				
				String cmd = "cmd.exe /c" + command;
				
				Runtime runtime = Runtime.getRuntime();
				Process process = runtime.exec(cmd);
				
				inputStream = process.getInputStream();
				inputStreamReader = new InputStreamReader(inputStream);
				bufferedReader = new BufferedReader(inputStreamReader);
				
				String line;
				while ((line = bufferedReader.readLine()) != null) {
					if (line.indexOf("fail") > 0) {//4 successful, 0 failed.  (0.00% fail) 이 문장만 필요!
						int begin = line.indexOf("(") + 1;// '(' 다음부터
						int end = line.indexOf("%") - 3;//소수점까지 가져올랬더니 int 형으로 형 변환 하려니까 오류..
						int probablity = Integer.parseInt(line.substring(begin, end));//확률 정수 부분만 자르기 -> 문자열을 int형으로 바꿔줌.
						if (probablity <= 25) {//실패 확률이 25% 이하면
							connStatus = true;//true 넣어준다. 그 외에는 위에서 false를 초기화 해 주었으므로 그대로 둔다.
						}
					}
				}
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				try {
					if (bufferedReader != null) {
						bufferedReader.close();
					}
					
					if (inputStreamReader != null) {
						inputStreamReader.close();
					}
					
					if (inputStream !=null) {
						inputStream.close();
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
				// 3. 디바이스 접속 상태를 수정한다.
				if (connStatus == true) {
					device.setConnStatus("Y");
				} else {
					device.setConnStatus("N");
				}
				this.deviceMapper.update(device);
			}
		}
	}
}
